Bu kodlarda verilen tapshiriga elave olaraq diskin yazma sureti qeyd olunsun. 
	(meselen : byte/saniye vahidi ile, deyek ki, yazilan faylin 10 byte olchusu var demeli fayl 1 saniyeye yazilacaq

bu emeliyyati hem createFile hem de setFileContent methodunda edin.

deleteFileByFilename(string filename) //eger file yoxdursa exception atsin, varsa file diskden silinsin 

updateFilename(string oldfilename, string newfilename) //eger fayl varsa adi deyishsin, yoxdursa exception atsin

hashFile(string filename); //bu method fayli hash variante chevirir istenilen hash algorithminden istifade ede bilersiniz,
(internetden arashdirin) //bu method chagirilandan sonra, eger ichinde Hello World yazilmishdisa, artiq hash codelar gorunsun.

ELAVE OLARAQ : SSD KLASI YARADIN VE ARTIQ HDD ILE OLAN ORTAQ EMELIYYATLARI "DISC" KLASINA CHIXARIN
HDD VE SSD DISKDEN YARANSIN; //SSD SURETI HDD DEN 10 DEFE CHOX OLSUN


FILE => CLASINA ELAVE OLARAQ Faylin YARANMA VAXTI, EN SON DEYISHILME VAXTI SAXLANILSIN

DISC => ShowAllFiles METHODU OLSUN HANSIKI BUTUN FAYLLAR GORUNSUN VE FAYLIN BUTUN MELUMATLARI GORUNSUN


class HDD {
	double current_size = 0;
private:
	class File {
	private:
		double file_size;
	public :
		string filename;
		string content;
		double getfile_size() {
			return file_size;
		}
		File(string filename, string content = "");
	};

	File** files;
	int file_count;
public:
	const static double max_size;

	File& getFile(string filename);

	bool isExistsFile(string filename);

	void createFile(string filename, string content = "");

	void setFileContent(string filename, string content = "");

	void deleteFileContent(string filename);
};

const double HDD::max_size = 1024;

class OperationSystem {
	OperationSystem(){}
public:
	static void controlPC();
};

void OperationSystem::controlPC() {
	HDD hd;
	try
	{
		hd.createFile("newtext.txt","hello world");
	}
	catch (const char* ex)
	{
		cout << "Error : " << ex << endl;
	}
}

void main() {
	OperationSystem::controlPC();
}